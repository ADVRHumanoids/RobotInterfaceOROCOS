import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("rtt_gazebo_embedded")
require("os")

loadComponent("gazebo","RTTGazeboEmbedded")

setActivity("gazebo",0,10,ORO_SCHED_OTHER)

var string plg = os.getenv("ROBOTOLOGY_ROOT")+"/build/install/lib/orocos/gnulinux/RTTGazeboClockPlugin/libRTTGazeboClockPlugin.so"
gazebo.add_plugin(plg)

var string path_world=os.getenv("ROBOTOLOGY_ROOT")+"/robots/cogimon-gazebo-models/iit-cogimon/empty.world"
gazebo.world_path = path_world


gazebo.configure()

gazebo.start()

gazebo.toggleDynamicsSimulation(false)

gazebo.spawn_model("cogimon", "model://iit-cogimon", 20)

import("rtt-gazebo-robot-sim")

loadComponent("cogimon","cogimon::robotSim")
setActivity("cogimon",0,11,ORO_SCHED_OTHER)

var string urdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/configs/ADVR_shared/cogimon/urdf/cogimon.urdf"
var string srdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/configs/ADVR_shared/cogimon/srdf/cogimon.srdf"
cogimon.loadURDFAndSRDF(urdf_path, srdf_path)
cogimon.getModel("cogimon")
cogimon.configure()

var array left = array(0.0, -0.4, 0.0, 0.9, -0.4, 0.0)
var array right = array(0.0, -0.4, 0.0, 0.9, -0.4, 0.0)
cogimon.setInitialPosition("left_leg", left)
cogimon.setInitialPosition("right_leg", right)

gazebo.toggleDynamicsSimulation(true)

## TEST
import("RobotInterfaceOROCOS")
loadComponent("interface_test", "robot_interface_orocos_test")
setActivity("interface_test",0.01,10,ORO_SCHED_OTHER)

#var string config_path = os.getenv("ROBOTOLOGY_ROOT") + "/external/RobotInterfaceOROCOS/tests/cogimon_config.yaml"

addPeer("interface_test", "cogimon")
interface_test.attachToRobot("cogimon", urdf_path, srdf_path)
interface_test.start()
